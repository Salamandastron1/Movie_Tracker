{"version":3,"sources":["assets/popcorn.png","reducers/index.js","reducers/moviesReducer.js","reducers/idReducer.js","reducers/nameReducer.js","reducers/errorReducer.js","reducers/favoritesReducer.js","Action-creators/setMostRecent.js","util/helper.js","util/key.js","Action-creators/toggleFavorite.js","Action-creators/errorReceived.js","containers/Card/Card.js","thunks/postFavorites.js","containers/CardContainer/CardContainer.js","Action-creators/getId.js","Action-creators/getName.js","containers/Authentication/SignUp/SignUp.js","containers/Authentication/SignIn/SignIn.js","containers/App/App.js","Action-creators/logOut.js","Action-creators/showFavorites.js","Action-creators/showAll.js","index.js"],"names":["module","exports","__webpack_require__","p","rootReducer","combineReducers","movies","state","arguments","length","undefined","action","type","Object","toConsumableArray","concat","map","movie","id","assign","favorited","name","error","favorites","setMostRecent","getMovieData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","cleanMovieData","t0","stop","this","apply","results","title","poster_path","overview","release_date","vote_average","makeOptions","user","options","email","password","method","body","JSON","stringify","headers","Content-Type","getUser","_ref2","_callee2","existingUser","_existingUser$data","_context2","ok","Error","_x","addUser","_ref3","_callee3","newUser","_context3","_x2","loginUser","_ref4","_callee4","currentUser","_context4","_x3","getFavorites","_ref5","_callee5","url","favoriteMovies","_context5","_x4","toggleFavorite","errorReceived","connect","user_id","dispatch","postFavorites","fave","userId","movie_id","alert","react_default","createElement","className","src","popcorn","alt","onClick","CardContainer","_Component","_getPrototypeOf2","_this","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","initialMovieData","API","props","onload","message","inherits","createClass","key","value","movieCards","_this$props","location","pathname","containers_Card_Card","filter","Component","getId","getName","SignUp","updateValue","e","_e$target","target","setState","defineProperty","submitNewUser","preventDefault","setError","history","push","_this$state","onSubmit","onChange","placeholder","NavLink","to","SignIn","forEach","some","updateFavorite","oldFave","pushFavorite","App","logoutUser","showFavorites","showAll","Route","exact","path","component","withRouter","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","react_redux_es","BrowserRouter","containers_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.13578785.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/popcorn.58c63aa0.png\";","import { combineReducers } from 'redux';\nimport { moviesReducer } from './moviesReducer'\nimport { idReducer } from './idReducer'\nimport { errorReducer } from './errorReducer'\nimport { nameReducer } from './nameReducer'\nimport { favoritesReducer } from './favoritesReducer'\n\n\n\nconst rootReducer = combineReducers({\n  movies: moviesReducer,\n  id: idReducer,\n  name: nameReducer,\n  error: errorReducer,\n  favorites: favoritesReducer \n})\n\nexport default rootReducer;","export const moviesReducer = (state = [], action) => {\n  switch(action.type) {\n      case 'SET_MOST_RECENT':\n        return [...state, ...action.movies]\n      case 'TOGGLE_FAVORITE':\n        return state.map(movie => {\n          if(movie.id !== action.id) {\n            return movie\n          } else {\n            return Object.assign({}, movie, {favorited: !movie.favorited})\n          }\n        })\n      case 'LOG_OUT':\n        return state.map(movie => {\n          return Object.assign({}, movie, {favorited: false})\n        });\n      default:\n        return state\n  }\n}\n","export const idReducer = (state = 0, action) => {\n  switch(action.type) {\n    case 'GET_ID':\n      return action.id\n    case 'LOG_OUT':\n      return 0\n    default:\n      return state\n  }\n}","export const nameReducer = (state = '', action) => {\n  switch(action.type) {\n    case 'GET_NAME':\n      return action.name\n    case 'LOG_OUT':\n      return ''\n    default:\n      return state\n  }\n}","export const errorReducer = (state = '', action) => {\n  switch(action.type) {\n    case 'ERROR_RECEIVED': \n      return action.error\n    default:\n      return state\n  }\n}","export const favoritesReducer = (state = 'SHOW_ALL', action) => {\n  switch(action.type) {\n    case 'SHOW_ALL':\n      return 'SHOW_ALL'\n    case 'SHOW_FAVORITES':\n      return 'SHOW_FAVORITES'\n    default:\n      return state\n  }\n}","export const setMostRecent = (movies) => ({\n  type: 'SET_MOST_RECENT',\n  movies,\n})\n","import { key } from './key.js';\n\nexport const getMovieData = async () => {\n  try {\n    const response = await fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=${key}&language=en-US&page=1`)\n    const data = await response.json()\n    return cleanMovieData(data)\n  } catch (e) {\n    return e\n  }\n}\n\nconst cleanMovieData = (data) => {\n  return data.results.map( movie => ({ \n    title: movie.title,\n    poster_path: movie.poster_path,\n    overview: movie.overview,\n    release_date: movie.release_date,\n    favorited: false,\n    id: movie.id,\n    vote_average: movie.vote_average,\n  }))\n}\n\nconst makeOptions = (user) => {\n  let options;\n\n  if (user.name) {\n    const { email , password , name } = user;\n    options = {\n      method: 'POST',\n      body: JSON.stringify({\n        name,\n        password,\n        email,\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    }\n  } else {\n    const { email, password } = user;\n    options = {\n      method: 'POST',\n      body: JSON.stringify({\n        password,\n        email\n        }),\n      headers: {\n        'Content-Type': 'application/json'\n      },\n    }\n  }\n\n  return options;\n}\n\nexport const getUser = async (user) => {\n  const url = 'http://localhost:3000/api/users';\n  const options = makeOptions(user);\n  const response = await fetch(url, options);\n  if(response.ok) {\n    const existingUser = await response.json();\n    const { name, id } = existingUser.data;\n    return { name, id};  \n  } else {\n    throw new Error('Email and Password do not match.')  \n  }\n}\n\n\nexport const addUser = async (user) => {\n  const url = 'http://localhost:3000/api/users/new';\n  const options = makeOptions(user);\n  const response = await fetch(url, options);\n\n  if (response.ok) {\n    const newUser = await response.json();\n\n    return {\n      name: user.name,\n      id: newUser.id\n    };\n  } else {\n    throw new Error('Email has already been used.');\n  } \n}\n\nexport const loginUser = async (user) => {\n  let currentUser;\n  if (user.name) {\n   currentUser = await addUser(user);\n  } else {\n   currentUser = await getUser(user);\n  }\n  return currentUser;\n}\n\nexport const getFavorites = async (id) => {\n  const url = `http://localhost:3000/api/users/${id}/favorites`\n  const response = await fetch(url);\n  if(response.ok) {\n    const favoriteMovies = await response.json();\n    return favoriteMovies.data;\n  }\n}\n","export const key = 'd4e6b557fe6d947099279f94de866258'","export const toggleFavorite = id => {\n  return {\n  type: 'TOGGLE_FAVORITE',\n  id,\n}}","export const errorReceived = (error) => ({\n  type: 'ERROR_RECEIVED',\n  error\n})\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { postFavorites } from '../../thunks/postFavorites';\nimport popcorn from '../../assets/popcorn.png';\nimport './Card.css'\n\n\nexport const Card = ({ title , id , postFavorites , poster_path , release_date , overview , user_id , vote_average, favorited }) => {\n  const movie = { title , id , poster_path , release_date , overview , vote_average }\n  return (\n    <div className='card'>\n      <div className={'movie-title ' + (favorited ? 'has-color' : '')}>\n        <img\n          className={'popcorn-' + (favorited ? 'show' : 'hide')} \n          src={popcorn}\n          alt='Pixel popcorn. It indicates that this movie has been favorited.' />\n        <h1 className='soda-pop'>{title}</h1>\n        <img\n          className={'popcorn-' + (favorited ? 'show' : 'hide')} \n          src={popcorn}\n          alt='Pixel popcorn. It indicates that this movie has been favorited.' />\n      </div>\n      <div \n        className='jello'\n        onClick={() => postFavorites(user_id, movie, favorited)}>\n        <img \n          src={'https://image.tmdb.org/t/p/w300_and_h450_bestv2/' + poster_path} \n          alt={`This is the poster for the movie \"${title}\" in theaters ${release_date}.`} />\n        </div>\n      <p className='overview'>{overview}</p>\n      <p className='release_date'>{release_date}</p>\n    </div>\n  )\n}\n\nexport const mapStateToProps = state => {\n  return { user_id: state.id }\n}\n\nexport const mapDispatchToProps = dispatch => ({\n  postFavorites: (id, fave, favorited) => {\n    dispatch(postFavorites(id, fave, favorited))\n  }\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Card);","import { toggleFavorite } from '../Action-creators/toggleFavorite';\nimport { errorReceived } from '../Action-creators/errorReceived';\n\nexport const postFavorites = (userId, movie, favorited) => {\n  let url;\n  let options;\n  if(!favorited && userId) {\n    url = 'http://localhost:3000/api/users/favorites/new'\n    options = {\n      method: 'POST',\n      body: JSON.stringify({\n          movie_id: movie.id,\n          user_id: userId,\n          title: movie.title,\n          poster_path: movie.poster_path, \n          release_date: movie.release_date,\n          vote_average: movie.vote_average, \n          overview: movie.overview,\n      }),\n      headers: {\n          'Content-Type': 'application/json'\n      },\n    }\n  } else if (userId) {\n    url = `http://localhost:3000/api/users/${userId}/favorites/${movie.id}`\n    options = {\n      method: 'DELETE',\n    }\n  } else {\n    return () => {\n      alert('Please log in to favorite a movie.');\n    }\n  }\n  return async (dispatch) => {\n    const response = await fetch(url, options)\n    if(response.ok) {\n      dispatch(toggleFavorite(movie.id));\n    } else {\n      dispatch(errorReceived('Favorite not added, 500 error'))\n    }\n  }\n}","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport {setMostRecent} from '../../Action-creators/setMostRecent';\nimport * as API from '../../util/helper';\nimport Card from '../Card/Card';\nimport './CardContainer.css'\n\nexport class CardContainer extends Component {\n  componentDidMount = async () => {\n    try {\n      const initialMovieData = await API.getMovieData();\n      this.props.onload(initialMovieData)\n      return initialMovieData;\n    } catch (e) {\n      throw Error(e.message);\n    }\n  }\n\n  render() {\n    const { movies , location } = this.props;\n    let movieCards;\n    switch (location.pathname) {\n      case '/':\n        movieCards = movies.map(movie => {\n          return <Card key={movie.id} {...movie} />\n        })\n        break;\n      case '/favorites':\n        const filteredMovies = movies.filter(movie => {\n          return movie.favorited\n        })\n        movieCards = filteredMovies.map(movie => {\n          return <Card key={movie.id} {...movie} />\n        })\n      break;\n      default:\n        movieCards = movies.map(movie => {\n          return <Card key={movie.id} {...movie} />\n        })\n    }\n    return (\n      <section className='card-container'>\n        {movieCards}\n      </section>\n    )\n  } \n}\n\n\nexport const mapStateToProps = state => ({\n  movies: state.movies,\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  onload: (movies) => dispatch(setMostRecent(movies))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardContainer);\n\n","export const getId = (id) => ({\n  type: 'GET_ID',\n  id\n})","export const getName = (name) => ({\n  type: 'GET_NAME',\n  name\n})","import React, { Component }  from 'react';\nimport { NavLink } from 'react-router-dom';\nimport * as API from '../../../util/helper';\nimport { connect } from 'react-redux';\nimport { errorReceived } from '../../../Action-creators/errorReceived';\nimport { getId } from '../../../Action-creators/getId';\nimport { getName } from '../../../Action-creators/getName';\n\nimport './SignUp.css';\n\nexport class SignUp extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n    }\n  }\n\n  updateValue = (e) => {\n    const { value, name } = e.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  submitNewUser = async (e) => {\n    e.preventDefault();\n    let currentUser;\n\n    try {\n      currentUser = await API.loginUser(this.state);\n      this.props.loginUser(currentUser.id, currentUser.name);\n      this.props.setError('');\n      this.props.history.push('/');\n      this.setState({ name: '', email: '', password: ''});\n    } catch (error) {\n      this.props.setError(error.message);\n    }\n  }\n\n  render() {\n    const { name, email, password } = this.state;\n    const { error } = this.props;\n\n    return (\n      <form \n        className='sign-up-form'\n        onSubmit={this.submitNewUser}>\n        { error !== '' && <h2 className=\"error\">{error}</h2> }\n        <input\n          className='name' \n          onChange={this.updateValue}\n          name=\"name\" \n          value={name} \n          placeholder=\"Enter your name\"/>\n        <input \n          className='email' \n          onChange={this.updateValue}\n          name=\"email\" \n          value={email} \n          placeholder=\"Enter your email\"/>\n        <input \n          className='password' \n          onChange={this.updateValue}\n          name=\"password\" \n          value={password} \n          type=\"password\" \n          placeholder=\"Enter your password\"/>\n        <input \n          className='submit'\n          type='submit'  \n          value='Sign Up'/>\n        <NavLink \n        className='sign-in'\n        to='/login'>\n          Sign In\n        </NavLink>\n      </form>\n    )\n  }\n}\n\nexport const mapStateToProps = state => ({ error: state.error })\n\nexport const mapDispatchToProps = dispatch => ({ \n      loginUser: (id, name) => {\n        dispatch(getId(id))\n        dispatch(getName(name))\n      },\n      setError: (error) => {\n        dispatch(errorReceived(error))\n      }\n    })\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","import React, { Component }  from 'react';\nimport * as API from '../../../util/helper';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom'\nimport { errorReceived } from '../../../Action-creators/errorReceived';\nimport { getId } from '../../../Action-creators/getId';\nimport { getName } from '../../../Action-creators/getName';\nimport { toggleFavorite } from '../../../Action-creators/toggleFavorite';\nimport { setMostRecent } from '../../../Action-creators/setMostRecent';\n\nimport './SignIn.css';\n\n\nexport class SignIn extends Component {\n  constructor() {\n    super()\n    this.state = {\n      email: '',\n      password: '',\n    }\n  }\n\n  updateValue = (e) => {\n    const { value, name } = e.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  loginUser = async (e) => {\n    e.preventDefault();\n    let currentUser;\n    try {\n      currentUser = await API.loginUser(this.state);\n      this.props.loginUser(currentUser.id, currentUser.name);\n      const faves = await API.getFavorites(currentUser.id);\n        faves.forEach(fave => {\n          const isIncluded = this.props.movies.some(movie => {\n            return movie.id === fave.movie_id\n          })\n          if(isIncluded) {\n            this.props.updateFavorite(fave.movie_id)\n          } else {\n            const oldFave = {\n              title: fave.title,\n              poster_path: fave.poster_path,\n              overview: fave.overview,\n              release_date: fave.release_date,\n              favorited: true,\n              id: fave.movie_id,\n              vote_average: fave.vote_average,\n            }\n            this.props.pushFavorite([oldFave])\n          }\n        })\n      this.props.setError('');\n      this.props.history.push('/');\n    } catch (error) {\n      this.props.setError(error.message);\n    }\n  }\n\n  render() {\n    const { email, password } = this.state;\n    const { error } = this.props;\n\n    return (\n      <form \n        className='sign-in-form'\n        onSubmit={this.loginUser}>\n        { error !== '' && <h2 className=\"error\"> { error } </h2> }\n        <input \n          className='email' \n          onChange={this.updateValue}\n          name=\"email\" \n          value={email} \n          placeholder=\"Enter your email\"/>\n        <input \n          className='password' \n          onChange={this.updateValue}\n          name=\"password\" \n          value={password} \n          type=\"password\" \n          placeholder=\"Enter your password\"/>\n        <input \n          className='submit'\n          type='submit'\n          value='Sign In' />\n        <NavLink \n        className='sign-up'\n        to='/signup'>\n          Sign up \n        </NavLink>\n      </form>\n    )\n  }\n}\n\nexport const mapStateToProps = state => {\n  return {  \n    error: state.error,\n    movies: state.movies\n  }\n}\n\nexport const mapDispatchToProps = dispatch => {\n  return {\n    loginUser: (id, name) => {\n      dispatch(getId(id))\n      dispatch(getName(name))\n    },\n    setError: (error) => {\n      dispatch(errorReceived(error))\n    },\n    updateFavorite: (id) => {\n      dispatch(toggleFavorite(id))\n    },\n    pushFavorite: (fave) => {\n      dispatch(setMostRecent(fave))\n    }\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react';\nimport { Route, NavLink, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CardContainer from '../CardContainer/CardContainer'\nimport './App.css';\nimport SignUp from '../Authentication/SignUp/SignUp';\nimport SignIn from '../Authentication/SignIn/SignIn';\nimport { logOut } from '../../Action-creators/logOut';\nimport {showFavorites} from '../../Action-creators/showFavorites'\nimport './App.css';\nimport {showAll} from '../../Action-creators/showAll'\n\nclass App extends Component {\n\n  render() {\n    const { id, name, logoutUser, showFavorites, favorites, showAll } = this.props;\n    return (\n      <main className=\"App\">\n        <header>\n          <NavLink \n            className='title'\n            to='/'\n            onClick={showAll}\n          >\n            Movie Tracker\n          </NavLink>\n          {id ? <h2 className='welcome'>{`Welcome, ${name}!`}</h2> : null}\n          {!id ? \n            <NavLink \n              className='log-link' \n              to='/login'>\n              Login\n              <i className=\"fas fa-sign-in-alt\"></i>\n            </NavLink> : \n            <NavLink\n              className='log-out' \n              to='/' \n              onClick={logoutUser}>\n              Sign Out\n              <i className=\"fas fa-sign-in-alt\"></i> \n            </NavLink>}\n          {id && favorites === 'SHOW_ALL' ? <NavLink \n                  to='/favorites'\n                  onClick={showFavorites}\n                  className='favorites'>\n                  Favorites\n                </NavLink>: null}\n          <Route exact path='/login' component={ SignIn } />\n          <Route exact path='/signup' component={ SignUp } />\n        </header>\n        <Route path='/' component={ CardContainer }/>\n        {/*<Route exact path='/favorites' component={CardContainer} />*/}\n      </main>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  id: state.id,\n  name: state.name,\n  favorites: state.favorites,\n})\n\nexport const mapDispatchToProps = dispatch => ({\n  logoutUser: () => dispatch(logOut()),\n  showFavorites: () => dispatch(showFavorites()),\n  showAll: () => dispatch(showAll())\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\n","export const logOut = () => ({\n  type: 'LOG_OUT'\n})","export const showFavorites = () => ({\n  type: 'SHOW_FAVORITES'\n})","export const showAll = () => ({\n  type: 'SHOW_ALL'\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk'\nimport { BrowserRouter } from 'react-router-dom';\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {Provider} from 'react-redux';\nimport rootReducer from './reducers'\n\nimport './index.css';\nimport App from './containers/App/App';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)))\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}